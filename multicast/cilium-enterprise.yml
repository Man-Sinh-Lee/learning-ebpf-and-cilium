---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpXQ3N3Smx3WTdDL2t6bzVKWUpvZWt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURjeU16RTBOVEl3TmxvWERUSTNNRGN5TXpFMApOVEl3Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF6QjhyUVgyZWZzVW9ValZnVkdjOHlTUzc3MDdQWDBpN1ZXejJkbk9hM1M2MWhmOEMKYU5BTU5HQXJlZEV1ckdwV1ZibTI0L3JGMnllb2lEQWtTU212T2hjVmpRaklRYkxMZjh1dmIxL0s5UkI3b2FQOApIU0ttUENoT1doNTNSU3NGWlRKM0xDTUp0a0hhVDFFVWZsVWRGOFRJVXJCWVlUV1NzWjB3dDZSbHhuWXhjdStsClRETXpkbDNVTG1GZDR5eThtWDBJdERiSTBOVXVkbkd3d3JYNHk4Um11OUJNQk1Mb0FXQWFsQlNWZWQrODVVNEcKSW05dWhLRGZmbGxqbnlBV0t2ZUt1VGk1eUUwVEFncHBUSm1ZdXlVL0FPMUxCNzVDb0VmSzk0NEl4cFFnS2RRcgpZSXozc3BkMXFpRWtIaThqYUxmYk1nZHRHU0VuVzh1U1BCa3MwUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRnFQN1Y2YlRtOTZaYVBVcG82OGtLVHhxS2NHTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmp4enZJbi9oMStMTGtWc3JLc00xY2NMNmFpRzNWZjlIMTRBUmJyeDdxT3ZQTXJBR2VEaTdzClBsa25OSnZLa1hqbEpXSk1JOHRmUS8vOWhrQnBZN01ZdjQ0YmR4ZEJzZnkyaUV1VmtOeis1S05uVmpOdjExWEQKNDI0TzgrYi8wNnJTdGRtYjcweVc3Zmd6MnVVeERPQW1GVVNidlJRZ3hIblRHZlQ2Y1VPdmdHM2UvRDJaeXF1bQpiSWIrK3pjM1FnblpjRVBJZFg1VkJ3S2xIa2h0aEM3bXlWbzFsejcrWTNOd0pVQjlJdi9oeGxwSTl6Smp2ejFICmQ1eXE4SzF0NEF2bkZPdlNaOEwydFJLNTF2dnlZeWxURXFIZEZOd2dOUWl5T0NIZS9XamRCWU1VVE9vMU5hV0cKblZlU3JsZU1mQW83SUs2QVFqK0hra3lIa25HWXFIYVQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBekI4clFYMmVmc1VvVWpWZ1ZHYzh5U1M3NzA3UFgwaTdWV3oyZG5PYTNTNjFoZjhDCmFOQU1OR0FyZWRFdXJHcFdWYm0yNC9yRjJ5ZW9pREFrU1Ntdk9oY1ZqUWpJUWJMTGY4dXZiMS9LOVJCN29hUDgKSFNLbVBDaE9XaDUzUlNzRlpUSjNMQ01KdGtIYVQxRVVmbFVkRjhUSVVyQllZVFdTc1owd3Q2Umx4bll4Y3UrbApURE16ZGwzVUxtRmQ0eXk4bVgwSXREYkkwTlV1ZG5Hd3dyWDR5OFJtdTlCTUJNTG9BV0FhbEJTVmVkKzg1VTRHCkltOXVoS0RmZmxsam55QVdLdmVLdVRpNXlFMFRBZ3BwVEptWXV5VS9BTzFMQjc1Q29FZks5NDRJeHBRZ0tkUXIKWUl6M3NwZDFxaUVrSGk4amFMZmJNZ2R0R1NFblc4dVNQQmtzMFFJREFRQUJBb0lCQVFDWFlxSjFEdEptbUpoZgo2QUJLZU1xSEx6eEdybjl6M29BNVNmZThQOTdpSFlzNUZyalZ2VDdmOVZjcElHL3FKVzlrWXJqMmVmMFZuV01MCnBoQ3pSandUN0J6cW5WSFFEK2VISHl3OGdLSUlnTElBWHB0VGpHZ1hnNWtna3luSDNiRkJyVnpmR2hsUTE2UXUKWVNhK3p5Y2xncWREVkZBbndGRE1jNVUzRGJFQnIwRjE3WDFKRXVlYk4zVzl1ZVN6dURFbkNzUkQwN1UxSXBXcQpjVmhoWGg3VVN2eXIvY3NvTU5NR3J0Z0Qzb2ExZmtYQk1kUEUrWkRpUnExOFZ0WnBibEFaMEdKbXR0Wm8xUm1uClpMalRQQ2RhK3hCTmtpc1RtQW0wZlczS1VsUmQxUzk3OWxjR0ttREtEUC9FZldla0lraW5PNWMxcFJ6bHk1QWYKbUgvOXdDQlZBb0dCQU83Q2x2UWNXejl6eXNvQnhQSFI2SmdOZHNkbFlDV0RubnRJRTlCQzVHYkRsY1NtYWZNTwpXdkt6dlp4aGwyUms4eGQxRkxoczJOZDMvWVNQRFFJaUdyREI4VloyV3lCQVhPYjJJdWk2UFlSd2phYTVSK2hsCkZaU1JFUm43U1NqT1JQM2E0YzNQYW9Dc1ZFR1dSV0swK0p0Q1dNYm5qMmNzTno1d0pFamMyRExIQW9HQkFOcmMKVEtVL3Y2M3l6MTl6VDZvbXArT09qdW84cHR4NXBEZDBnYkFYb0E5aUZheGFzSGFWZTlzSXlTOS8vL1l6MGdhWgp2dElrZTJoMnk3WTZCNFdsQVFHRzlZRzh5MUZIMzZSTjJ1UmFzWVErc25zcWhja1VLcEppVktTY0FubmlsekNBCmhTcDY2cUZZN3dNaEZveTlHWjluOERmYzFKSXpWMFh2R1p1ZWtvdW5Bb0dCQU9zeGlGM2phUWR5V3ZydkQwQmUKMUU2a1JMTmE2NEZJekY4SXUydlYyUVJaK2ppQzdhOWVIcjBoemRBMFdsdXREY0czdGJlT2tYUi9ZSjZxQTlocwpHL3F1c2J2SVR5L1A5elFVbG9MR296N0pXT0E1ZDlvM2FUQzJUakJYMXRONWpZQzdrdCtZU0lPRVBtTjFVZGhRCkNPMTRSOWQzMTAxOHd0YWd4VDE1UHdlVkFvR0FTUXQzcFR0MmpPYmFJV0JKK1Y3M2I3Slhyb1BacVFJTU5kbnoKb3NMdno5S0xxeitGWDc2YVhNczg0bGFWSmlXN2RpcUFEb0RRazFmNnUzSDRxcmtjY2RjS1AyZTBjQWROOC9kcwpGQVRVOUc4OGdIRDd2OVcwTTdFUDBQU2t1dXRPVElqSWFSb25Ednl3b05tOVBmR3JDSkhYRWIzcFVIWkVMWG9VCmtPVEd3a2NDZ1lBNDRJNWd5bElPSzB3bjB6RzhJUUc5dEt6MlN1emZoRFBRNHVMNE1tS0lrZ0xFbXpqQUZoUWwKV3pzQVIyS0NUOUhQYjJHNTl6MlAyd1ZWNXJUZjRVanpXS0NtR2R5a1VHd3NEZjg4ekZNWU5wTXp3OXRJWnZkMQplWVZacVZFTzdOS2VFZHpabjNzd3Z3ODRNSFVldFpzUWtGQUlHa0FlcVROTlp3MmhuNENyYmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpXQ3N3Smx3WTdDL2t6bzVKWUpvZWt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURjeU16RTBOVEl3TmxvWERUSTNNRGN5TXpFMApOVEl3Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF6QjhyUVgyZWZzVW9ValZnVkdjOHlTUzc3MDdQWDBpN1ZXejJkbk9hM1M2MWhmOEMKYU5BTU5HQXJlZEV1ckdwV1ZibTI0L3JGMnllb2lEQWtTU212T2hjVmpRaklRYkxMZjh1dmIxL0s5UkI3b2FQOApIU0ttUENoT1doNTNSU3NGWlRKM0xDTUp0a0hhVDFFVWZsVWRGOFRJVXJCWVlUV1NzWjB3dDZSbHhuWXhjdStsClRETXpkbDNVTG1GZDR5eThtWDBJdERiSTBOVXVkbkd3d3JYNHk4Um11OUJNQk1Mb0FXQWFsQlNWZWQrODVVNEcKSW05dWhLRGZmbGxqbnlBV0t2ZUt1VGk1eUUwVEFncHBUSm1ZdXlVL0FPMUxCNzVDb0VmSzk0NEl4cFFnS2RRcgpZSXozc3BkMXFpRWtIaThqYUxmYk1nZHRHU0VuVzh1U1BCa3MwUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRnFQN1Y2YlRtOTZaYVBVcG82OGtLVHhxS2NHTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmp4enZJbi9oMStMTGtWc3JLc00xY2NMNmFpRzNWZjlIMTRBUmJyeDdxT3ZQTXJBR2VEaTdzClBsa25OSnZLa1hqbEpXSk1JOHRmUS8vOWhrQnBZN01ZdjQ0YmR4ZEJzZnkyaUV1VmtOeis1S05uVmpOdjExWEQKNDI0TzgrYi8wNnJTdGRtYjcweVc3Zmd6MnVVeERPQW1GVVNidlJRZ3hIblRHZlQ2Y1VPdmdHM2UvRDJaeXF1bQpiSWIrK3pjM1FnblpjRVBJZFg1VkJ3S2xIa2h0aEM3bXlWbzFsejcrWTNOd0pVQjlJdi9oeGxwSTl6Smp2ejFICmQ1eXE4SzF0NEF2bkZPdlNaOEwydFJLNTF2dnlZeWxURXFIZEZOd2dOUWl5T0NIZS9XamRCWU1VVE9vMU5hV0cKblZlU3JsZU1mQW83SUs2QVFqK0hra3lIa25HWXFIYVQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRRTg3TmpJTm9DeHJydnJQVUorVUx4REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TnpJek1UUTFNakEzV2hjTk1qY3dOekl6TVRRMQpNakEzV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFER2gzVHJhZnpuNjh6ZCtWMkU1V3V0VVBlUGJORloKMzVoMlJNNGF3OExaOG8ySng5ZHFncVpUaW9KOXgyay9EWXZuZmFnQkJoNzYxSEpSbks5Wk1RVS8rOWt1NmNDNwozOVVZbCtOQXFTYlFPTWNlbjVmRTl2WTUvYzF2R3Q0ekIyYitsbE8wcUR2TmR0QXVmYi9yeGE4YjMxZFpWclR5CmZVdFhxRDFYS1h3WDhTcDlURkFqU2JHL1ZMeFUrSkJKamdyNlVBSmVyYUxwbkU2WVBQSVcvbGRFNDN3M3hrZlEKOTlVTW53bFA5U3JzUWlTMmk5T1RkdndZNCtTSWUyY012U2dpV1NEb1lVd2lSQ29LbWF4bFVhQitKQWNma1hhegpESmxZdWRPWnE0bzJFQnMrMUhzanA2M21tMGN4Y1VJckhueEdrcCt3ZXdRSEhaakNUVXFXMFZNcEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZGcVA3VjZiVG05NlphUFVwbzY4a0tUeApxS2NHTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFZdXBRZGp4c3FvTEd1dEgwRm05VFBNcGhBQm40TkdtZU54UXVvK0l5V1gyZmN2TysKTGlwWXVFOHZ2eFFtdDRuaTRpRHVid2FlYkpQQSsrS25kc2NzUWlYYjd2YW5pRlBwWjF4Qzl5b09LaVhnckRXMApDQXBkcUNoZm84R2FzSzlaR1dLcThSZi9reisvQVFHTWJ2UUhTUm5DeW92UmMwSUFJYUJDVFBQZldqRW1wY3JRCkJLK3E5YVJPQ2xpcEhOZ0Z5Mml6S2YyRjdhdkNjQ1UzMGc0dHJVUjNUaDdVSTNmMW81QUhvLzZSMFA4aU1tQmEKS0prakRYaWFTcW54dUFaZGZZOXFic25WcjJrbjcwUmZKYnpGd0lMR3dnL0R5RzJCRHU3M0dxcjBUbVoyV0o0Ygp5OW02d04zVUo3L1dJUTJOOUJ1eUNPRGxYdzMvbUpya0tXN05KQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeG9kMDYybjg1K3ZNM2ZsZGhPVnJyVkQzajJ6UldkK1lka1RPR3NQQzJmS05pY2ZYCmFvS21VNHFDZmNkcFB3Mkw1MzJvQVFZZSt0UnlVWnl2V1RFRlAvdlpMdW5BdTkvVkdKZmpRS2ttMERqSEhwK1gKeFBiMk9mM05ieHJlTXdkbS9wWlR0S2c3elhiUUxuMi82OFd2Rzk5WFdWYTA4bjFMVjZnOVZ5bDhGL0VxZlV4UQpJMG14djFTOFZQaVFTWTRLK2xBQ1hxMmk2WnhPbUR6eUZ2NVhST044TjhaSDBQZlZESjhKVC9VcTdFSWt0b3ZUCmszYjhHT1BraUh0bkRMMG9JbGtnNkdGTUlrUXFDcG1zWlZHZ2ZpUUhINUYyc3d5WldMblRtYXVLTmhBYlB0UjcKSTZldDVwdEhNWEZDS3g1OFJwS2ZzSHNFQngyWXdrMUtsdEZUS1FJREFRQUJBb0lCQUFRZXEzNTNKSmhyZkVUZQo5K0hhSVBIbnpEdGR0cnAydVdNNjZrd0Q0L2RCNFU0S3A1MitPRlZqZW5IQndaMWRXcG5qTWFsVHh6RE5WOUg1CnZtbkxhcUI1U1hoL3dWQWt4UGROcjVtWDZRWkpKMWlyVnlydk5RemZCM1JXeW1Xa3NhNTIwQ1hmbDk0YnFSWk4KNWIydXpJTjNqd2g3bENXMEUrd3R3WmdkZEVYSzRnaEZZYndLM2JwZEYyVEd2aG9JdlZaMDU3M293RXFvQWJnbAp6WlRsSGNTUyswcmo5SzJaU3F3OFd3ZEl5clMyVXZDa3RoNTVwMzhnbk5OaXgvaHI0cGJhamdBVTcwSU4zYXZYClJzK3pGamdZa3JxNGxuTUpxM3A0UmlwaU96T0NOODdXS3VrNFdSb3piakwrS1pHdkFYcUluOW1RR20vWDlDY04Kb1p2d1JVRUNnWUVBMWZrVTg5eVVFTWI5MkVSd0k0aVFHeEV6c3E1M3RMRENjZjJ6KzZRTlV1TDErcHM1Q0p4LwpJdGJrSGE3MnhNOHVxbURHVUlvS3NIK29RMU5SSXFFaHF6aFQya1Z0SzFwc2YyOHBJWXpMd3lEN2l1MFB4T2V1CmFndC9jRXhMSDdiQWZFM2N4U241aWI1WGlORFlhZno4WC9jRkQ4dGFvUk1nSFkycldra0VZU3NDZ1lFQTdZWFYKR2IvUjZFU2IxS2Q0MHdIMmhxWnQ5OUUvVGZVSHVHNzBUc25HV2VaTjZHbCtSTytWUWJ2dnc4cHdlS2RzWS9EeAphbGZGaGk1TGMwZFBTRlhNblljcmcrR2w4a25qdytMS1pXUTJjZGplS2tKeWFsWGkrMUtMbGdDQWZuL0wvQnVECmJjN203WGM1SUk1MVdiY1BjZHMwUkRCdDhJUWEyTUhaaUJvL0t2c0NnWUJLOW1pUXhzWlkybDQwVmtXekxUVFAKUnNlRjRmbXVJLzc3VUphdG9sdkluaHJ2SVZKcDRlbm9tc0J3WmN1dVI2ZGhxV1hROFl1dEtnd1pDaWR5cW1EUgpTM3FWRFoyaGdweGdTT0Z3RDVPVFdRckhNU1pGSmFYRklTSVVoYVlNQmtxSlFmNEdWUjVIVTVmM0pyT3E3aWE4CnVCM2QyckIxbmUyeWJOK0xVZWxtNFFLQmdDOHNYVjUzMG1DbS82d0VkdUt4aVJ6RkFTSXUxTHZPNW5HaTE3S3UKTUU2NmhzNlo1UkliNHpEaStvT1FPVFk5U2pHdk1NTkdHMXpDNVFsSUtGN2RhMzM5MG82bXlpYU10a2U1U3lsSAo5ZWcyZ2lreWVUYlZSL2RTTlpiZEVxZ05DWjVRZUpIZWZjNjcxd1M0Um1aRERUWTNxdkhBREpXd0p3VFZ1elprCndCYnhBb0dBZTE3eThsUEVJWnNQVklLSUZ6ZStocWhIR0EzS1lCMkh1TTJOUWlYUG5xZXpIZHR3ZHFBcjE1aG0KMzNoUVFDcGZyaG5FMktYbFlWQVR5aUNqY0xONGVRRVNHMjNlTCtsMzJSWURtZy85OVlmQk9NakdSZHZ4TnJnOQpFQTl3aldVeVVTNEp4U3ZpWHlzVmtjcXo1bGZSNUJ2NzdvcnVRdEI1Umo2SEFHbkFBbWc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpXQ3N3Smx3WTdDL2t6bzVKWUpvZWt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURjeU16RTBOVEl3TmxvWERUSTNNRGN5TXpFMApOVEl3Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF6QjhyUVgyZWZzVW9ValZnVkdjOHlTUzc3MDdQWDBpN1ZXejJkbk9hM1M2MWhmOEMKYU5BTU5HQXJlZEV1ckdwV1ZibTI0L3JGMnllb2lEQWtTU212T2hjVmpRaklRYkxMZjh1dmIxL0s5UkI3b2FQOApIU0ttUENoT1doNTNSU3NGWlRKM0xDTUp0a0hhVDFFVWZsVWRGOFRJVXJCWVlUV1NzWjB3dDZSbHhuWXhjdStsClRETXpkbDNVTG1GZDR5eThtWDBJdERiSTBOVXVkbkd3d3JYNHk4Um11OUJNQk1Mb0FXQWFsQlNWZWQrODVVNEcKSW05dWhLRGZmbGxqbnlBV0t2ZUt1VGk1eUUwVEFncHBUSm1ZdXlVL0FPMUxCNzVDb0VmSzk0NEl4cFFnS2RRcgpZSXozc3BkMXFpRWtIaThqYUxmYk1nZHRHU0VuVzh1U1BCa3MwUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRnFQN1Y2YlRtOTZaYVBVcG82OGtLVHhxS2NHTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmp4enZJbi9oMStMTGtWc3JLc00xY2NMNmFpRzNWZjlIMTRBUmJyeDdxT3ZQTXJBR2VEaTdzClBsa25OSnZLa1hqbEpXSk1JOHRmUS8vOWhrQnBZN01ZdjQ0YmR4ZEJzZnkyaUV1VmtOeis1S05uVmpOdjExWEQKNDI0TzgrYi8wNnJTdGRtYjcweVc3Zmd6MnVVeERPQW1GVVNidlJRZ3hIblRHZlQ2Y1VPdmdHM2UvRDJaeXF1bQpiSWIrK3pjM1FnblpjRVBJZFg1VkJ3S2xIa2h0aEM3bXlWbzFsejcrWTNOd0pVQjlJdi9oeGxwSTl6Smp2ejFICmQ1eXE4SzF0NEF2bkZPdlNaOEwydFJLNTF2dnlZeWxURXFIZEZOd2dOUWl5T0NIZS9XamRCWU1VVE9vMU5hV0cKblZlU3JsZU1mQW83SUs2QVFqK0hra3lIa25HWXFIYVQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRYWVKZXIxc1FlVzF5RVpRL3QxUW5aVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TnpJek1UUTFNakEzV2hjTk1qY3dOekl6TVRRMQpNakEzV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeHducDd4TFh2b0YzblZpRkN5OGkKb2FPVnBBRjlWSE96WFR5SEhvVWhFWHZRSzZMVXQ1YitrOGJ1VU5lb3dweWxkRVJYTHJIY1pCR0hvMHlMT3VRVgo3ZjJuamZpdUtVRCtzck1kUENHSG1vRWV4RFhua0NlQnNmRGlsZDFKTGdwK3R2RnZDRXcxN0tWeGZoRGEvcCtwCkpwc1ZEbm9vYmpXT0Jsc1Jxc0UwUlFIU3BVR0ZxSnBwSkFieXhUTXBQekRpRTdpSFlTVEppV3VrcFd1Ly9PNmsKZ2UrMzlNQzJQa2FScU1EVndlVmUzbTNKN2NJQkw0d2hSMmVxeGowcW1ldllhejdoNSs2Q2R5bkRCZS92OHdyOApNWTNxS3U3Ym9uYysyMElhZ3ROR3A2UXJRRG1XZkJBb3hhelJlTTdnNWpkL3lhcGNRcGxuU3BjRHlPNEtuSXV0CmVRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSYWorMWVtMDV2ZW1XagoxS2FPdkpDazhhaW5CakFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDUVJhdWN0YytyaEU1ZGlSQVIzTDBpVkNocU5KSmEKTWc4RnZXM1Q4L09QSnVyTUdVckE3OFU0MmdhT0FOUVF3Ujc1SVNIYTQ1bDNpZXpHV1JkR2VXVEkvU0NhWXFtLwppWDIzNkkzdHF0bDVsQ0NrNTV4OTBzYmNIMWl2cGhNMFRqWGtMQVFWVGxLSlpFc2syajZaVG1qT0gzeXk1ZklVCkhzamRXak10S3BEZ01iVTNBWGF3OTV4ZDhvWDZ6Mloya2dLL3l2L3I3Nkd6bEx4VXRoUEhta2FIdjRQaGI3VWQKY2RaOWI4OTZnbzc3VEx1WkNuTXlzdVlzMnRyN01kNTVJYTNqZWRkMnV5b1NwL1RrUHFOK0Q4WnVKbkpHazlLbAovOFIrYWdFeTBVc1ZWd1J3dC80bmtmbFl4NGZoODFLY0dlb1ZTT001aHVlUUhveEtNZkhXa0Y4UgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeHducDd4TFh2b0YzblZpRkN5OGlvYU9WcEFGOVZIT3pYVHlISG9VaEVYdlFLNkxVCnQ1YitrOGJ1VU5lb3dweWxkRVJYTHJIY1pCR0hvMHlMT3VRVjdmMm5qZml1S1VEK3NyTWRQQ0dIbW9FZXhEWG4Ka0NlQnNmRGlsZDFKTGdwK3R2RnZDRXcxN0tWeGZoRGEvcCtwSnBzVkRub29ialdPQmxzUnFzRTBSUUhTcFVHRgpxSnBwSkFieXhUTXBQekRpRTdpSFlTVEppV3VrcFd1Ly9PNmtnZSszOU1DMlBrYVJxTURWd2VWZTNtM0o3Y0lCCkw0d2hSMmVxeGowcW1ldllhejdoNSs2Q2R5bkRCZS92OHdyOE1ZM3FLdTdib25jKzIwSWFndE5HcDZRclFEbVcKZkJBb3hhelJlTTdnNWpkL3lhcGNRcGxuU3BjRHlPNEtuSXV0ZVFJREFRQUJBb0lCQVFERHMzVzJRYnFyYjdUaQptc1RGeUdTdXRaOU9rTUJnSnhyMjA2cXZVWXJBSEJNRXRLZWVrL0pmN3JzbjljUFRCaDZRZ1JtUHFnWGV4bld0CkZIZlpRYVptU0g5VTBteTcxMUlXOXBJS0s1V2ZUdEduYnJEdVJrbjVZYllJVUhuQnNVUUNNTVZSVFUzQURyUFcKbGxBZEIzTlRxQ3c5L2RKKytsMVkxblk2aEprV053WFNPYkZrR2kwYTJERHpZZzBMa3NuaWgyeTBVZ1QvdVd0bwpsbTlXUmNLeEVEWkUwTTFTUGxhNytNdTBBbnNBWkhxWEMyb3VwS0xoZzJOKzIwRFR4UkZRMTFXTkNGMDhYTHpGCi8yUWNGbkhaa1hqQ2x2VERYdlY5V1duSVRybWlKT1BrN2lwQThvODdUL0s5WENMcXl3UFVsKzErZ2l4c0FpcGoKY2luUlBDZDVBb0dCQVBDSDF4M1ZEZjFXMjErSTVqbDhpRCtWU2NkeFlRZDNFQ1FHUEhGMlpnbWFlT3hybGpiZwpMdmNOSXZHZ0FmZVJkOFJFRXU2TkZtRHZUcUo0VFN0SjdIY0FoaFk2dituVlQ2ZVJPL0s1SmoxeU8rNmFFcjVzCjhtV0o4OGR1bWRTQ2YzbndHbkNTTFhDbm9nMVFUNkIvenhFUkFqZ3ZuTTFVb2tuWEJwNHFOWU5uQW9HQkFOUFcKOEozWmRqZGJOWDM1aVpWenNoKzhTTG1jNVp2eEVsR1pmeEN3bS9rQ1F0Tk5jMDEvSmJnc0hCbkhMQ0k3MnkyTApObCs1Q2NXdzRZOWZBSEFrNnJXc01QS2YzWkRSblB3cHdGb2s4bGtua2Nyc0tnSHlRcWFIS0dWRWhCQStYbHlmCkRhR1pSQisyZjNxeUdwUlZlZURzNEZzWWlzTEN4SmNXeXhlclVwd2ZBb0dBZGQvTVB4VnJIcTBUSXRWZkplcnUKaG1KdDNxeWtoVmtHOHZDUGJIYytlQlJZa0Z3RktHMWk5clZjVzVjemY1U3RZZVNPZHBOejFSdFJxUE5WdGhJcgpMUUozczZzazQ3NGlwQmJianc3SE83T2d4VVNDVFFudEhHK25wU09CaFpCU1VucWxLbWVvbHgyL245Q3N4Ulg5CmJ2cXI0TWNNaTkrZkRKcXc1by8rMjU4Q2dZQnl4bDRQNkNhNHoxNG9KdTk0WGZzQVhzODRZZDIxbytPOCttRngKOVg1TWFBRTA0eDI1dTA0QWYwV3FZZE56cU9LVHhuMXJWNklIemxJbmo5MTQ1VWVWcnZuR092K2MyelVuR3FmeApMMXR2R3BWUFVLMWg2SlJjRFpiQloySDJPeFI5TWwvOFVrSXF2SUpOUS9wS3JCVWczTGFpSktYcDZBVURwNEhhCkRTVHhHUUtCZ1FEWnFWd2hadkJNeXJFSzU5YmdwOFZPd2NuMTNhYUlrUGRmb2dQWXF6MHpKT0Y1d2lyekloam8KUVArSVFxZVBST3hlamhGU3BOK0lWMWNWS0Joc2JwZitjeWFNQTl5aFduM2VDUDFtbW1VZ3pmY1psUlgranpSVgpTZGM2cUt2Kzk0ZUh1ZWhCOUU0MFlPOXB2ZnUydmx1eG1pMW5CYjFXYjdjaVZZalpTaGUwWWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:  
  
  # Configuration options to enable overlapping PodCIDR support for clustermesh
  enable-cluster-aware-addressing: "false"
  enable-inter-cluster-snat: "false"
  
  # Configuration options to enable SRv6 support
  enable-srv6:               "false"
  srv6-encap-mode:           "reduced"
  srv6-locator-pool-enabled: "false"
  
  # Configuration options to enable multicast support
  multicast-enabled: "false"
  egress-gateway-ha-reconciliation-trigger-interval: "1s"

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  policy-cidr-match-mode: ""
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-masquerade-to-route-source: "false"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-acceleration: "disabled"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.0.0.0/8"
  cluster-pool-ipv4-mask-size: "24"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"

  k8s-client-qps: "10"
  k8s-client-burst: "20"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "true"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-xff-num-trusted-hops-ingress: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"
  proxy-idle-timeout-seconds: "60"

  external-envoy-proxy: "false"
  max-connected-clusters: "255"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-agent/enterprise-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: enterprise-cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - isovalent.com
  resources:
  - isovalentegressgatewaypolicies
  - isovalentsrv6sidmanagers
  - isovalentsrv6locatorpools
  - isovalentsrv6egresspolicies
  - isovalentvrfs
  - isovalentmulticastgroups
  verbs:
  - list
  - watch
- apiGroups:
  - isovalent.com
  resources:
  - isovalentsrv6sidmanagers/status
  verbs:
  - patch
- apiGroups:
  - isovalent.com
  resources:
  - isovalentsrv6egresspolicies
  verbs:
  - create
  - delete
  - get
- apiGroups:
  - isovalent.com
  resources:
  - isovalentmulticastnodes
  - isovalentmulticastnodes/status
  verbs:
  - create
  - update
  - delete
  - get
  - watch
  - list
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-operator/enterprise-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: enterprise-cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - isovalentmulticastgroups.isovalent.com
  - isovalentmulticastnodes.isovalent.com
  - isovalentegressgatewaypolicies.isovalent.com
  - isovalentfqdngroups.isovalent.com
  - isovalentpodnetworks.isovalent.com
  - isovalentsrv6egresspolicies.isovalent.com
  - isovalentsrv6sidmanagers.isovalent.com
  - isovalentsrv6locatorpools.isovalent.com
  - isovalentvrfs.isovalent.com
- apiGroups:
  - isovalent.com
  resources:
  - isovalentsrv6locatorpools
  - isovalentfqdngroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - isovalent.com
  resources:
  - isovalentsrv6sidmanagers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumcidrgroups
  verbs:
  - create
  - patch
  - delete
- apiGroups:
  - isovalent.com
  resources:
  - isovalentegressgatewaypolicies
  verbs:
  # to allow IEGP watcher
  - watch
  - list
- apiGroups:
  - isovalent.com
  resources:
  - isovalentegressgatewaypolicies/status
  verbs:
  # to allow IEGPs status.groupStatus updates
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/enterprise-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: enterprise-cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: enterprise-cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/enterprise-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: enterprise-cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: enterprise-cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "NodePort"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
    nodePort: 31234
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/isovalent/cilium:v1.15.7-cee.1"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: '1'
        - name: KUBERNETES_SERVICE_HOST
          value: "kind-control-plane"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/isovalent/cilium:v1.15.7-cee.1"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "kind-control-plane"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/isovalent/cilium:v1.15.7-cee.1"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/isovalent/cilium:v1.15.7-cee.1"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/isovalent/cilium:v1.15.7-cee.1"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/isovalent/cilium:v1.15.7-cee.1"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: write-cni-conf-when-ready
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "kind-control-plane"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/isovalent/cilium:v1.15.7-cee.1"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host or apply sysctlfix
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/isovalent/operator-generic:v1.15.7-cee.1"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "kind-control-plane"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/isovalent/hubble-relay:v1.15.7-cee.1"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          livenessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          startupProbe:
            # give the relay one minute to start up
            grpc:
              port: 4222
            timeoutSeconds: 3
            failureThreshold: 20
            periodSeconds: 3
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: hubble-ui/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: hubble-ui/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "map $http_upgrade $connection_upgrade {\n  default upgrade;\n  '' close;\n}\n\nserver {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n\n    client_max_body_size 1G;\n    proxy_buffer_size 16k;\n    proxy_busy_buffers_size 24k;\n    proxy_buffers 64 8k;\n    subrequest_output_buffer_size 8k;\n\n    location /healthz {\n        access_log off;\n        add_header Content-Type text/plain;\n        return 200 'ok';\n    }\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location = / {\n          proxy_pass http://localhost:8090/web/;\n        }\n        location = /service-map {\n          proxy_pass http://localhost:8090/web/;\n        }\n        location = /policies {\n          proxy_pass http://localhost:8090/web/;\n        }\n        location = /ps-tree {\n          proxy_pass http://localhost:8090/web/;\n        }\n        location = /error {\n          proxy_pass http://localhost:8090/web/;\n        }\n\n        location /hubble-ui-api {\n            proxy_pass_request_headers on;\n            proxy_pass http://localhost:8090/hubble-ui-api;\n        }\n        location /oauth2 {\n            proxy_pass_request_headers on;\n            proxy_pass http://localhost:8090/oauth2;\n        }\n        location / {\n            proxy_pass http://127.0.0.1:8082;\n        }\n    }\n}\nserver {\n    listen       8082;\n    listen       [::]:8082;\n    server_name  localhost;\n\n    root /app;\n    index index.html;\n\n    location / {\n        try_files $uri $uri/ /index.html;\n    }\n}"
---
# Source: hubble-ui/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
# Source: hubble-ui/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  namespace: kube-system
  name: "hubble-ui"
---
# Source: hubble-ui/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  labels:
    k8s-app: hubble-ui
  namespace: kube-system
spec:
  type: "NodePort"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
      nodePort: 31235
---
# Source: hubble-ui/templates/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
  name: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        fsGroup: 65532
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
        - name: frontend
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            runAsGroup: 101
            runAsNonRoot: true
            runAsUser: 101
          image: "quay.io/isovalent/hubble-ui-enterprise:v1.0.3"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
              name: http
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            timeoutSeconds: 1
          resources:
            {}
          volumeMounts:
            - name: hubble-ui-nginx-conf
              mountPath: /etc/nginx/templates/default.conf.template
              subPath: nginx.conf
          env:
            - name: VERSION
              value: "quay.io/isovalent/hubble-ui-enterprise:v1.0.3"
        - name: backend
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
          image: "quay.io/isovalent/hubble-ui-enterprise-backend:v1.0.3"
          imagePullPolicy: IfNotPresent
          env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: HUBBLE_RELAY_ADDR
              value: "hubble-relay.kube-system.svc.cluster.local:80"
            - name: GOPS_ENABLED
              value: "false"
            - name: ENABLE_TRACING
              value: "false"
            - name: LOG_TRACES
              value: "false"
            - name: OTLP_ENABLED
              value: "false"
          ports:
            - containerPort: 8090
              name: grpc
          livenessProbe:
            httpGet:
              path: /healthz
              port: grpc
              scheme: HTTP
            initialDelaySeconds: 0
            timeoutSeconds: 1
          resources:
            {}
          volumeMounts:
      volumes:
        - configMap:
            defaultMode: 438
            name: hubble-ui-nginx
          name: hubble-ui-nginx-conf
